name: Build and Deploy to Cloud Run

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: braidai # Your Google Cloud project ID
  GAR_LOCATION: us-central1 # The region for Artifact Registry
  FRONTEND_SERVICE: braidai-frontend # Name for your frontend Cloud Run service
  BACKEND_SERVICE: braidai-backend   # Name for your backend Cloud Run service
  REPOSITORY: braidai-repo         # Name for your Artifact Registry repository

jobs:
  deploy:
    name: Deploy to Cloud Run
    runs-on: ubuntu-latest

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: 'projects/362912017141/locations/global/workloadIdentityPools/github-pool/providers/github-provider' # Replace with your WIF provider
          service_account: 'github-actions-sa@braidai.iam.gserviceaccount.com' # Replace with your Service Account email

      - name: Set up Cloud SDK
        uses: 'google-github-actions/setup-gcloud@v2'

      - name: Configure Docker
        run: gcloud auth configure-docker ${{ env.GAR_LOCATION }}-docker.pkg.dev

      - name: Build and Push Backend Image
        run: |-
          docker build -t ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.BACKEND_SERVICE }}:${{ github.sha }} ./agent-python-backend
          docker push ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.BACKEND_SERVICE }}:${{ github.sha }}

      - name: Build and Push Frontend Image
        run: |-
          docker build -t ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.FRONTEND_SERVICE }}:${{ github.sha }} ./agent-frontend
          docker push ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.FRONTEND_SERVICE }}:${{ github.sha }}

      - name: Deploy Backend to Cloud Run
        run: |-
          gcloud run deploy ${{ env.BACKEND_SERVICE }} \
            --image ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.BACKEND_SERVICE }}:${{ github.sha }} \
            --region ${{ env.GAR_LOCATION }} \
            --platform managed \
            --allow-unauthenticated \
            --port 8000

      - name: Deploy Frontend to Cloud Run
        run: |-
          gcloud run deploy ${{ env.FRONTEND_SERVICE }} \
            --image ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.FRONTEND_SERVICE }}:${{ github.sha }} \
            --region ${{ env.GAR_LOCATION }} \
            --platform managed \
            --allow-unauthenticated

### Important Next Steps in Google Cloud

Before this workflow will run successfully, you need to complete a few one-time setup steps in your Google Cloud project:

1.  **Enable APIs**: Make sure the "Cloud Run API" and "Artifact Registry API" are enabled.
2.  **Create an Artifact Registry**: You need to create a Docker repository named `braidai-repo` in your project.
3.  **Set up Workload Identity Federation (WIF)**: This is the secure way to allow GitHub to access your Google Cloud account. You will need to create a Workload Identity Pool, a Provider, and a Service Account, and then grant that service account the necessary permissions (like "Cloud Run Admin" and "Artifact Registry Writer"). The values for `workload_identity_provider` and `service_account` in the file above will need to be replaced with the ones you create.

Once these steps are done in your Google Cloud project, you can commit and push this `deploy.yml` file to your GitHub repository. The deployment will start automatically.
